package Interfaces.SesionAdmin;


import Clases.GuardadoDatos.UtilJavaEventsEventos;
import Clases.Eventos.Evento;
import java.awt.Frame;
import java.io.File;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Sergio
 */
public class ConsultarEventos extends javax.swing.JFrame {
    private DefaultTableModel tabla = new DefaultTableModel(); //Crea una tabla la cual nos ayudara a realizar el filtrado de los eventos   
    ArrayList<Evento> eventos = new ArrayList<>(); //Inicializa la ArrayList de eventos que tenemos creada en la clase UtilJavaEventsEventos donde tenemos guardados todos los datos de los eventos
    
    /**
     * Creates new form ConsultarEventos
     */
    public ConsultarEventos() {
        initComponents();
        String columnas[] = {"Titulo", "Tipo","Calle","Numero", "CodigoPostal", "Ciudad", "Fecha", "Hora", "Precio", "Calificacion"}; //Crea una variable String llamada columnas que es la que nos permite organizar como apareceran los datos en la tabla creada anteriormente.
        tabla.setColumnIdentifiers(columnas); //Establece al modelo de tabla creado antes como se organizaran las diferentes columnas creadas.
        Tabla.setModel(tabla); //Establece el modelo de la tabla creada
        Tabla.getTableHeader().setReorderingAllowed(false); //Se encarga de que no se puedan mover las columnas ni descolocarlas, es decir, que no se puedan editar las columnas.
        ComboBoxFiltrar.setSelectedItem("Titulo");  //El ComboBox filtra como apareceran los eventos una vez entren a la ventana. 
        rellenaTabla("Titulo"); //La tabla se encarga de establecer el orden en el que se filtraran los eventos la primera vez que aparezcan los datos.
        this.setVisible(true);
        
        
    }
    
        //El Metodo rellenaTabla se va a encargar de permitir como poder rellenar la tabla como dice su nombre y la que va ayudar a 
        //que cuando se cargen los datos cada uno se coloque en la columna realizada anteriormente.
    
        public void rellenaTabla(String criterio) {
        limpiaTabla();
        if (criterio.equals("Titulo")) {
            eventos = UtilJavaEventsEventos.getEventosPorTitulo();
        } else if (criterio.equals("Tipo")) {
            eventos = UtilJavaEventsEventos.getEventosPorTipo();
        }else if (criterio.equals("Calle")) {
            eventos = UtilJavaEventsEventos.getEventosPorCalle();
        }else if (criterio.equals("NÃºmero")) {
            eventos = UtilJavaEventsEventos.getEventosPorNumero();
        }else if (criterio.equals("CodigoPostal")) {
            eventos = UtilJavaEventsEventos.getEventosPorCodigoPostal();
        }else if (criterio.equals("Ciudad")) {
            eventos = UtilJavaEventsEventos.getEventosPorCiudad();
        }else if (criterio.equals("Fecha")) {
            eventos = UtilJavaEventsEventos.getEventosPorFecha();
        }else if (criterio.equals("Hora")) {
            eventos = UtilJavaEventsEventos.getEventosPorHora();
        }else if (criterio.equals("Precio")) {
            eventos = UtilJavaEventsEventos.getEventosPorPrecio();
        }else if (criterio.equals("Calificacion")) {
            eventos = UtilJavaEventsEventos.getEventosPorCalificacion();    
        }
        
        for (Evento c : eventos) {
            tabla.addRow(new Object[]{c.getTitulo(), c.getTipo(), c.getDireccion().getCalle(), c.getDireccion().getNumero(), c.getDireccion().getCodigopostal(), c.getDireccion().getCiudad(), c.getFecha(), c.getHora(), c.getPrecio(), c.getCalificacion()});
        }
    }
        
        //Metodo que se encarga de eliminar todas las filas de la tabla una vez se cierre y una vez se cargue esta ventana se 
        //colocaran los datos de nuevo a sus posiciones gracias al metodo rellenaTabla(). 
        
       public void limpiaTabla() {
        int filas = tabla.getRowCount();
        for (int i = 0; i < filas; i++) {
            tabla.removeRow(0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        BotonVolver = new javax.swing.JButton();
        FiltrarPor = new javax.swing.JLabel();
        ComboBoxFiltrar = new javax.swing.JComboBox<>();
        Eliminar = new javax.swing.JButton();
        ModificarEvento = new javax.swing.JButton();
        ActualizarMenu1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JavaEvents");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 153, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CONSULTA DE EVENTOS");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 17, 710, 60));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        Tabla.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Titulo", "Tipo", "Calle", "Numero", "CodigoPostal", "Ciudad", "Fecha", "Hora", "Precio", "Calificacion"
            }
        ));
        jScrollPane1.setViewportView(Tabla);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 710, 300));

        BotonVolver.setIcon(new javax.swing.ImageIcon("C:\\Users\\Sergio\\OneDrive\\Documentos\\NetBeansProjects\\JavaEvents\\src\\main\\resources\\left-arrow (1).png")); // NOI18N
        BotonVolver.setBorderPainted(false);
        BotonVolver.setContentAreaFilled(false);
        BotonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonVolverActionPerformed(evt);
            }
        });
        jPanel1.add(BotonVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 50, 50));

        FiltrarPor.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        FiltrarPor.setText("Filtrar por:");
        jPanel1.add(FiltrarPor, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 410, 90, 30));

        ComboBoxFiltrar.setBackground(new java.awt.Color(255, 153, 255));
        ComboBoxFiltrar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ComboBoxFiltrar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Titulo", "Tipo", "Fecha", "Hora", "Precio", "Calificacion" }));
        ComboBoxFiltrar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ComboBoxFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxFiltrarActionPerformed(evt);
            }
        });
        jPanel1.add(ComboBoxFiltrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 410, -1, -1));

        Eliminar.setBackground(new java.awt.Color(255, 153, 255));
        Eliminar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Eliminar.setText("Eliminar Evento");
        Eliminar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });
        jPanel1.add(Eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 410, 120, -1));

        ModificarEvento.setBackground(new java.awt.Color(255, 153, 255));
        ModificarEvento.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ModificarEvento.setText("ModificarEvento");
        ModificarEvento.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ModificarEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarEventoActionPerformed(evt);
            }
        });
        jPanel1.add(ModificarEvento, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 440, 120, -1));

        ActualizarMenu1.setBackground(new java.awt.Color(255, 153, 255));
        ActualizarMenu1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        ActualizarMenu1.setText("Actualizar MenÃº");
        ActualizarMenu1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ActualizarMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActualizarMenu1ActionPerformed(evt);
            }
        });
        jPanel1.add(ActualizarMenu1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 410, 120, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BotonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonVolverActionPerformed
        UtilJavaEventsEventos.guardarDatosEventos();
        
        
        Administrador frame1 = new Administrador();
        frame1.setVisible(true);
        dispose();
    }//GEN-LAST:event_BotonVolverActionPerformed

    private void ComboBoxFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxFiltrarActionPerformed
        
        //Se encarga de dar el orden a la tabla una vez selecciones cualquiera de las opciones que tengas en el ComboBox.
        
        String orden = (String) ComboBoxFiltrar.getSelectedItem();
        rellenaTabla(orden);
    }//GEN-LAST:event_ComboBoxFiltrarActionPerformed

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        
        //Una vez se presione este boton si tiene seleccionada una fila/evento
        //le saldra un panel de confirmacion con dos opciones SI o No si selecciona si el evento se eliminara de la aplicacion
        //y guardara los datos en el archivo evento seguido saldra un mensaje si todo ha salido bien con la nueva longitud del archivo eventos.dat
        
        int fila = Tabla.getSelectedRow();
        if (fila == -1) {
        JOptionPane.showMessageDialog(this, "No hay evento seleccionado.", "Mensaje", JOptionPane.ERROR_MESSAGE);
        return;
    }

        Evento eventoAEliminar = eventos.get(fila);
        int decision = JOptionPane.YES_NO_OPTION;
        int respuesta = JOptionPane.showConfirmDialog(this, "Â¿EstÃ¡ seguro de que quiere eliminar este evento?",
                    "ConfirmaciÃ³n de acciÃ³n", decision);



        if (respuesta != JOptionPane.YES_OPTION) {
        return;
    }
        // Eliminar de la lista
        eventos.remove(fila);
        // Guardar lista actualizada
        UtilJavaEventsEventos.guardarDatosEventos();
        JOptionPane.showMessageDialog(this, "Evento eliminado correctamente.");
        File archivo = new File("eventos.dat");
        System.out.println("TamaÃ±o del archivo despuÃ©s de guardar: " + archivo.length());
       
    }//GEN-LAST:event_EliminarActionPerformed

    
    private void ModificarEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarEventoActionPerformed
            
        //Una vez se presione este boton se redigira a la ventana ModificarEvento si se selecciona una fila/evento de la tabla
        //sino hay nada seleccionado saldra un mensaje de que no hay ningun evento seleccionado.
        
        int fila = Tabla.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "No hay evento seleccionado.", "Mensaje", JOptionPane.ERROR_MESSAGE);
        } else {
            Evento ev = eventos.get(fila);
            ModificarEvento e = new ModificarEvento(ev);
            e.setVisible(true);
            dispose();
        } 
    }//GEN-LAST:event_ModificarEventoActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
       
    }//GEN-LAST:event_formWindowClosing

    private void ActualizarMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActualizarMenu1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ActualizarMenu1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultarEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultarEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultarEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultarEventos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultarEventos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ActualizarMenu1;
    private javax.swing.JButton BotonVolver;
    private javax.swing.JComboBox<String> ComboBoxFiltrar;
    private javax.swing.JButton Eliminar;
    private javax.swing.JLabel FiltrarPor;
    private javax.swing.JButton ModificarEvento;
    private javax.swing.JTable Tabla;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
